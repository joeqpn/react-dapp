{"ast":null,"code":"import _regeneratorRuntime from \"/Users/joe/Documents/truffle/projects/react-dapp/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joe/Documents/truffle/projects/react-dapp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from \"web3\";\n\nvar getWeb3WS = function getWeb3WS() {\n  return new Promise(function (resolve, reject) {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    console.log(\"Enabling Infura Websocket\");\n    window.addEventListener(\"load2\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3WS;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Modern dapp browsers pc based...\n              //console.log(\"Mobile?: \" + isMobile);\n              web3WS = new Web3.providers.WebsocketProvider(\"wss://rinkeby.infura.io/ws/v3/db7a4bd577ba4c7ab8593520c14d59c4\");\n              console.log(\"Websocket Enabled.\"); // Acccounts now exposed\n\n              resolve(web3WS);\n              reject(console.log(\"ERROR\"));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })));\n  });\n};\n\nexport default getWeb3WS;","map":{"version":3,"sources":["/Users/joe/Documents/truffle/projects/react-dapp/client/src/utils/getWeb3WS.js"],"names":["Web3","getWeb3WS","Promise","resolve","reject","console","log","window","addEventListener","web3WS","providers","WebsocketProvider"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAClB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACIC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB;AAAA;AAAA;AAAA;AAAA,6BAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7B;AACA;AACMC,cAAAA,MAHuB,GAGd,IAAIT,IAAI,CAACU,SAAL,CAAeC,iBAAnB,CAAqC,gEAArC,CAHc;AAMzBN,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EANyB,CAOzB;;AACAH,cAAAA,OAAO,CAACM,MAAD,CAAP;AACAL,cAAAA,MAAM,CAACC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAD,CAAN;;AATyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC;AAYH,GAfD,CADkB;AAAA,CAAlB;;AAkBA,eAAeL,SAAf","sourcesContent":["import Web3 from \"web3\";\n\n\nconst getWeb3WS = () =>\nnew Promise((resolve, reject) => {\n// Wait for loading completion to avoid race conditions with web3 injection timing.\nconsole.log(\"Enabling Infura Websocket\");\n    window.addEventListener(\"load2\", async () => {\n        // Modern dapp browsers pc based...\n        //console.log(\"Mobile?: \" + isMobile);\n        const web3WS = new Web3.providers.WebsocketProvider(\"wss://rinkeby.infura.io/ws/v3/db7a4bd577ba4c7ab8593520c14d59c4\");\n        \n            \n            console.log(\"Websocket Enabled.\");\n            // Acccounts now exposed\n            resolve(web3WS);\n            reject(console.log(\"ERROR\"));\n\n    });\n});\n\nexport default getWeb3WS\n\n"]},"metadata":{},"sourceType":"module"}